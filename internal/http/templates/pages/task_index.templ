package pages

import (
	"github.com/vixdang0x7d3/the-human-task-manager/internal/http/templates"
	"github.com/vixdang0x7d3/the-human-task-manager/internal/http/models"
	"strconv"
	"strings"
)

templ SearchBar() {
	<div class="flex w-full items-center gap-2 p-4">
		<label class="input input-bordered flex items-center gap-2">
			<input type="text" class="grow" placeholder="Search"/>
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="h-4 w-4 opacity-70">
				<path
					fill-rule="evenodd"
					d="M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z"
					clip-rule="evenodd"
				></path>
			</svg>
		</label>
		<div class="dropdown">
			<div tabindex="0" role="button" class="btn m-1">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
					class="size-6"
				>
					<path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
				</svg>
			</div>
			<div
				tabindex="0"
				class="dropdown-content card card-compact bg-base-100 text-primary-content z-[1] w-64 p-2 shadow"
			>
				<div class="card-body">
					<h3 class="card-title">Filters:</h3>
					<p>This should be the filter content</p>
				</div>
			</div>
		</div>
	</div>
}

templ ButtonBarLeft() {
	<div class="flex gap-2">
		<button id="hyphon-btn" class="btn btn-square btn-xs">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				class="size-6"
			>
				<path stroke-linecap="round" stroke-linejoin="round" d="M5 12h14"></path>
			</svg>
		</button>
		<button id="arrow-down-btn" class="btn btn-square btn-xs">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				class="size-6"
			>
				<path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5"></path>
			</svg>
		</button>
		<button id="wait-btn" class="btn btn-square btn-xs">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				class="size-6"
			>
				<path stroke-linecap="round" stroke-linejoin="round" d="M14.25 9v6m-4.5 0V9M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"></path>
			</svg>
		</button>
		<button id="delete-btn" class="btn btn-square btn-xs">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				class="size-6"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"
				></path>
			</svg>
		</button>
		<button id="complete-btn" class="btn btn-square btn-xs">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				class="size-6"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					d="m20.25 7.5-.625 10.632a2.25 2.25 0 0 1-2.247 2.118H6.622a2.25 2.25 0 0 1-2.247-2.118L3.75 7.5M10 11.25h4M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125Z"
				></path>
			</svg>
		</button>
	</div>
}

templ ButtonBarRight() {
	<div class="flex gap-2">
		<button id="prev-btn" class="btn btn-xs btn-square">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				class="h-4 w-4"
				fill="none"
				viewBox="0 0 24 24"
				stroke="currentColor"
			>
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
			</svg>
		</button>
		<span>(Page 1)</span>
		<button id="next-btn" class="btn btn-xs btn-square">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				class="h-4 w-4"
				fill="none"
				viewBox="0 0 24 24"
				stroke="currentColor"
			>
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
			</svg>
		</button>
	</div>
}

templ ButtonBar() {
	<div class="flex justify-between items-center px-4 py-2">
		@ButtonBarLeft()
		@ButtonBarRight()
	</div>
}

templ TaskItem(index int, m models.TaskItemView) {
	<div class="indicator w-full">
		<span class="indicator-item indicator-start badge badge-accent">#{ strconv.Itoa(index) }</span>
		<div tabindex="0" class="collapse collapse-arrow bg-base-300 px-4">
			<div class="h-16 py-4">
				<div class="grid grid-cols-4 justify-around">
					<span class="text-primary-content font-semibold">{ m.Description }</span>
					<span class="badge badge-primary font-bold">{ strings.ToUpper(m.State) }</span>
					<span class="text-primary-content font-semibold">Urgency: { m.Urgency }</span>
					<input type="checkbox" name="checkbox" class="radio place-self-end"/>
				</div>
			</div>
			<div class="collapse-content border border-black">
				<span class="text-primary-content font-semibold">Details: </span>
				<div class="flex">
					<div class="flex flex-col gap-y-2 w-4/12">
						<span class="badge badge-neutral">Create: { m.Create }</span>
						<span class="badge badge-primary">Deadline: { m.Deadline }</span>
						<span class="badge badge-secondary">Schedule: { m.Schedule }</span>
						<span class="badge badge-accent">Wait: { m.Wait }</span>
					</div>
					<div class="flex flex-col w-8/12">
						<span class="text-primary-content font-semibold">Project: { m.ProjectTitle }</span>
						<span class="text-primary-content font-semibold">Priority: { m.Priority }</span>
						<span class="text-primary-content font-semibold">
							Tags:
							for _, tag := range m.Tags {
								<span class="badge badge-secondary mx-1">{ tag }</span>
							}
						</span>
					</div>
					<div class="flex flex-col justify-items-end gap-y-2 w-2/12">
						<button class="btn btn-primary btn-xs">Update</button>
						<button class="btn btn-secondary btn-xs">Complete</button>
						<button class="btn btn-neutral btn-xs">Delete</button>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ TaskIndex(m []models.TaskItemView, logoutURL string) {
	@templates.Boilerplate() {
		@templates.Head("Tasks")
		<body>
			@templates.Navbar(logoutURL)
			<div class="flex items-center justify-center py-4">
				<div class="flex flex-col w-10/12">
					<div class="flex justify-between items-center px-4 py-2 bg-base-100">
						<h1 class="text-4xl font-bold">Tasks</h1>
					</div>
					@SearchBar()
					<div class="card w-full bg-base-200 shadow-xl justify-center">
						<div class="card-body">
							@ButtonBar()
							<div class="p-4 max-h-80 w-full flex flex-col overflow-y-scroll">
								for i, item := range(m) {
									@TaskItem(i, item)
								}
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="fixed bottom-4 right-4">
				<button class="btn btn-lg btn-primary font-semibold">+ Add Task</button>
			</div>
		</body>
	}
}
